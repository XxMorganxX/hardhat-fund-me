{
  "address": "0xc0bCDB7f8a3F4c1b02C62Ff4f9A9Ea86d3676885",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x30e0559d9c17fdd414555ccb0f0f7305b828e5a91e6a38143963d0d327906456",
  "receipt": {
    "to": null,
    "from": "0xBe0acA30e893fF717C1452431836aF78BBe00462",
    "contractAddress": "0xc0bCDB7f8a3F4c1b02C62Ff4f9A9Ea86d3676885",
    "transactionIndex": 102,
    "gasUsed": "933973",
    "logsBloom": "0x
    "blockHash": "0x8dca919541933ac0556f98d52a7327e7ff6461a5dbd019276a93ded4705b793a",
    "transactionHash": "0x30e0559d9c17fdd414555ccb0f0f7305b828e5a91e6a38143963d0d327906456",
    "logs": [],
    "blockNumber": 8181680,
    "cumulativeGasUsed": "12898034",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "a66e03fd91ddb4ae0c34669895fa267a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    \\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion( ) public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        return s_priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            s_addressToAmountFunded[s_funders[funderIndex]] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n\\n\\n}\\n\",\"keccak256\":\"0xaed5b4e5f3f503081ba90669bb611a57a3ba86ba0cd1b54a5e84d5f04c90cc13\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x1eddd4af7d2451b1bb1df5194255388969c3adf0aac7f539394291c13384e267\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010fb380380620010fb833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c610f83620001786000396000818161040001526106860152610f836000f3fe60806040526004361061007f5760003560e01c806354861af71161004e57806354861af7146101425780636b69a5921461017f578063b60d4288146101aa578063dba6335f146101b45761008e565b80630d8e6e2c146100985780630ec3b027146100c35780631bf6132d146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610844565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b6040516100e591906108de565b60405180910390f35b3480156100fa57600080fd5b506101156004803603810190610110919061093c565b6103e6565b6040516101229190610844565b60405180910390f35b34801561013757600080fd5b506101406103fe565b005b34801561014e57600080fd5b5061016960048036038101906101649190610995565b610638565b60405161017691906109d1565b60405180910390f35b34801561018b57600080fd5b50610194610677565b6040516101a19190610844565b60405180910390f35b6101b26101df565b005b3480156101c057600080fd5b506101c9610684565b6040516101d691906109d1565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a890919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a98565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610b03565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610483576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610528576000806000600184815481106104ac576104ab610b30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061052090610b5f565b915050610486565b50600067ffffffffffffffff81111561054457610543610ba8565b5b6040519080825280602002602001820160405280156105725781602001602082028036833780820191505090505b5060019080519060200190610588929190610784565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105af90610c08565b60006040518083038185875af1925050503d80600081146105ec576040519150601f19603f3d011682016040523d82523d6000602084013e6105f1565b606091505b5050905080610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610c69565b60405180910390fd5b50565b6001818154811061064857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806106b4836106e4565b90506000670de0b6b3a764000085836106cd9190610c89565b6106d79190610d12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610dbb565b5050509150506402540be4008161077c9190610e36565b915050919050565b8280548282559060005260206000209081019282156107fd579160200282015b828111156107fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107a4565b5b50905061080a919061080e565b5090565b5b8082111561082757600081600090555060010161080f565b5090565b6000819050919050565b61083e8161082b565b82525050565b60006020820190506108596000830184610835565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108a461089f61089a8461085f565b61087f565b61085f565b9050919050565b60006108b682610889565b9050919050565b60006108c8826108ab565b9050919050565b6108d8816108bd565b82525050565b60006020820190506108f360008301846108cf565b92915050565b600080fd5b60006109098261085f565b9050919050565b610919816108fe565b811461092457600080fd5b50565b60008135905061093681610910565b92915050565b600060208284031215610952576109516108f9565b5b600061096084828501610927565b91505092915050565b6109728161082b565b811461097d57600080fd5b50565b60008135905061098f81610969565b92915050565b6000602082840312156109ab576109aa6108f9565b5b60006109b984828501610980565b91505092915050565b6109cb816108fe565b82525050565b60006020820190506109e660008301846109c2565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a33601b836109ec565b9150610a3e826109fd565b602082019050919050565b60006020820190508181036000830152610a6281610a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa38261082b565b9150610aae8361082b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae357610ae2610a69565b5b828201905092915050565b600081519050610afd81610969565b92915050565b600060208284031215610b1957610b186108f9565b5b6000610b2784828501610aee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6a8261082b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9d57610b9c610a69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf2600083610bd7565b9150610bfd82610be2565b600082019050919050565b6000610c1382610be5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c53600b836109ec565b9150610c5e82610c1d565b602082019050919050565b60006020820190508181036000830152610c8281610c46565b9050919050565b6000610c948261082b565b9150610c9f8361082b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd857610cd7610a69565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1d8261082b565b9150610d288361082b565b925082610d3857610d37610ce3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6281610d43565b8114610d6d57600080fd5b50565b600081519050610d7f81610d59565b92915050565b6000819050919050565b610d9881610d85565b8114610da357600080fd5b50565b600081519050610db581610d8f565b92915050565b600080600080600060a08688031215610dd757610dd66108f9565b5b6000610de588828901610d70565b9550506020610df688828901610da6565b9450506040610e0788828901610aee565b9350506060610e1888828901610aee565b9250506080610e2988828901610d70565b9150509295509295909350565b6000610e4182610d85565b9150610e4c83610d85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8b57610e8a610a69565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec857610ec7610a69565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0557610f04610a69565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4257610f41610a69565b5b82820290509291505056fea26469706673582212202c5f10b4871b48026f7361e83735ce58a76b9381de0b22905e913af522d463d764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c806354861af71161004e57806354861af7146101425780636b69a5921461017f578063b60d4288146101aa578063dba6335f146101b45761008e565b80630d8e6e2c146100985780630ec3b027146100c35780631bf6132d146100ee5780633ccfd60b1461012b5761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610844565b60405180910390f35b3480156100cf57600080fd5b506100d86103c0565b6040516100e591906108de565b60405180910390f35b3480156100fa57600080fd5b506101156004803603810190610110919061093c565b6103e6565b6040516101229190610844565b60405180910390f35b34801561013757600080fd5b506101406103fe565b005b34801561014e57600080fd5b5061016960048036038101906101649190610995565b610638565b60405161017691906109d1565b60405180910390f35b34801561018b57600080fd5b50610194610677565b6040516101a19190610844565b60405180910390f35b6101b26101df565b005b3480156101c057600080fd5b506101c9610684565b6040516101d691906109d1565b60405180910390f35b6802b5e3af16b188000061021e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106a890919063ffffffff16565b101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610a49565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a98565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038357600080fd5b505afa158015610397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190610b03565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610483576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610528576000806000600184815481106104ac576104ab610b30565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061052090610b5f565b915050610486565b50600067ffffffffffffffff81111561054457610543610ba8565b5b6040519080825280602002602001820160405280156105725781602001602082028036833780820191505090505b5060019080519060200190610588929190610784565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105af90610c08565b60006040518083038185875af1925050503d80600081146105ec576040519150601f19603f3d011682016040523d82523d6000602084013e6105f1565b606091505b5050905080610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062c90610c69565b60405180910390fd5b50565b6001818154811061064857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806106b4836106e4565b90506000670de0b6b3a764000085836106cd9190610c89565b6106d79190610d12565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561072d57600080fd5b505afa158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610dbb565b5050509150506402540be4008161077c9190610e36565b915050919050565b8280548282559060005260206000209081019282156107fd579160200282015b828111156107fc5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107a4565b5b50905061080a919061080e565b5090565b5b8082111561082757600081600090555060010161080f565b5090565b6000819050919050565b61083e8161082b565b82525050565b60006020820190506108596000830184610835565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108a461089f61089a8461085f565b61087f565b61085f565b9050919050565b60006108b682610889565b9050919050565b60006108c8826108ab565b9050919050565b6108d8816108bd565b82525050565b60006020820190506108f360008301846108cf565b92915050565b600080fd5b60006109098261085f565b9050919050565b610919816108fe565b811461092457600080fd5b50565b60008135905061093681610910565b92915050565b600060208284031215610952576109516108f9565b5b600061096084828501610927565b91505092915050565b6109728161082b565b811461097d57600080fd5b50565b60008135905061098f81610969565b92915050565b6000602082840312156109ab576109aa6108f9565b5b60006109b984828501610980565b91505092915050565b6109cb816108fe565b82525050565b60006020820190506109e660008301846109c2565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a33601b836109ec565b9150610a3e826109fd565b602082019050919050565b60006020820190508181036000830152610a6281610a26565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa38261082b565b9150610aae8361082b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ae357610ae2610a69565b5b828201905092915050565b600081519050610afd81610969565b92915050565b600060208284031215610b1957610b186108f9565b5b6000610b2784828501610aee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b6a8261082b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b9d57610b9c610a69565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bf2600083610bd7565b9150610bfd82610be2565b600082019050919050565b6000610c1382610be5565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c53600b836109ec565b9150610c5e82610c1d565b602082019050919050565b60006020820190508181036000830152610c8281610c46565b9050919050565b6000610c948261082b565b9150610c9f8361082b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd857610cd7610a69565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d1d8261082b565b9150610d288361082b565b925082610d3857610d37610ce3565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6281610d43565b8114610d6d57600080fd5b50565b600081519050610d7f81610d59565b92915050565b6000819050919050565b610d9881610d85565b8114610da357600080fd5b50565b600081519050610db581610d8f565b92915050565b600080600080600060a08688031215610dd757610dd66108f9565b5b6000610de588828901610d70565b9550506020610df688828901610da6565b9450506040610e0788828901610aee565b9350506060610e1888828901610aee565b9250506080610e2988828901610d70565b9150509295509295909350565b6000610e4182610d85565b9150610e4c83610d85565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e8b57610e8a610a69565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ec857610ec7610a69565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f0557610f04610a69565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4257610f41610a69565b5b82820290509291505056fea26469706673582212202c5f10b4871b48026f7361e83735ce58a76b9381de0b22905e913af522d463d764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}